<%- contentFor('top') %>
<%- include('partials/top') %>

<%- contentFor('left_side') %>
<%- include('partials/left_side') %>

<%- contentFor('body') %>
<script>
    async function fetchMenuListAndRender() {
        try {
            const menuSelect = document.getElementById('menu');
            const menuList = await fetchMenuList();
            
            // 기존 옵션 제거
            menuSelect.innerHTML = '<option value="">메뉴 선택</option>';

            // 메뉴 리스트로부터 옵션 추가
            menuList.forEach(menu => {
                const option = document.createElement('option');
                option.value = menu.seq; // 메뉴의 고유 식별자 설정
                option.textContent = menu.name; // 메뉴 이름 설정
                menuSelect.appendChild(option);
            });
        } catch (error) {
            console.error('메뉴 조회 오류', error);
        }
    }

    async function fetchMenuList() {
        try {
            const response = await fetch('/menus/getMenuList');
            if (!response.ok) {
                throw new Error('메뉴 조회 오류');
            }
            const data = await response.json();
            console.log('menuList >> ', data)
            return data;
        } catch (error) {
            console.error('메뉴 조회 오류', error);
            return [];
        }
    }


    async function fetchUsersAndAdmins() {
        try {
            // 유저 , 관리자 전체 조회
            const response = await fetch('/auth/userAndAdminList');
            if (!response.ok) {
                throw new Error('유저 및 관리자 조회 오류');
            }
            const data = await response.json();
            return data;
        } catch (error) {
            console.error('유저 및 관리자 조회 오류', error);
            return { userList: [], adminList: [] }; 
        }
    }

    async function showUserList() {
        const roleSelect = document.getElementById('type');
        const userTableContainer = document.getElementById('userTableContainer');

        if (roleSelect.value === 'user') {
            userTableContainer.style.display = 'block';
            const usersData = await fetchUsersAndAdmins();
            renderTable(usersData.userList, 'user');
        } else if (roleSelect.value === 'admin') {
            userTableContainer.style.display = 'block';
            const usersData = await fetchUsersAndAdmins();
            renderTable(usersData.adminList, 'admin');
        } else if (roleSelect.value === 'all') { // '전체' 옵션 추가
            userTableContainer.style.display = 'block';
            const usersData = await fetchUsersAndAdmins();
            renderTable([...usersData.userList, ...usersData.adminList], 'all');
        } else {
            userTableContainer.style.display = 'none';
        }

        // 전체 선택 체크박스 이벤트 리스너 추가
        const selectAllUsersCheckbox = document.getElementById('selectAllUsers');
        selectAllUsersCheckbox.addEventListener('change', function() {
            const checkboxes = document.querySelectorAll('input[name="selectedUsers"]');
            checkboxes.forEach(checkbox => {
                checkbox.checked = selectAllUsersCheckbox.checked;
            });
            const adminCheckboxes = document.querySelectorAll('input[name="selectedAdmins"]');
            adminCheckboxes.forEach(checkbox => {
                checkbox.checked = selectAllUsersCheckbox.checked;
            });
        });
    }

    function renderTable(users, type) {
        const userTableBody = document.getElementById('userTableBody');
        userTableBody.innerHTML = '';

        users.forEach(user => {
            const tr = document.createElement('tr');

            const tdCheckbox = document.createElement('td');
            const checkbox = document.createElement('input');
            checkbox.type = 'checkbox';
            checkbox.name = type === 'admin' ? 'selectedAdmins' : 'selectedUsers';
            checkbox.value = user.seq;
            tdCheckbox.appendChild(checkbox);
            tr.appendChild(tdCheckbox);

            const tdSeq = document.createElement('td');
            tdSeq.textContent = user.seq;
            tr.appendChild(tdSeq);

            const tdName = document.createElement('td');
            tdName.textContent = user.name;
            tr.appendChild(tdName);

            const tdEmail = document.createElement('td');
            tdEmail.textContent = user.email;
            tr.appendChild(tdEmail);

            const tdType = document.createElement('td');
            tdType.textContent = user.type;
            tr.appendChild(tdType);

            userTableBody.appendChild(tr);
        });
    }
</script>
<div class="container" style="padding : 30px">
    <h2>권한 생성</h2>
    <form action="/auth/create" method="POST">
        <div class="form-group">
            <label for="name">권한명</label>
            <input type="text" class="form-control" id="name" name="name" required>
        </div>
        <div class="form-group">
            <label for="description">권한 설명</label>
            <textarea class="form-control" id="description" name="description" required></textarea>
        </div>
        <div class="form-group">
            <label>권한 부여 메뉴</label><br>
            <% if (menuList && menuList.length > 0) { %>
                <% menuList.forEach(function(menu) { %>
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="checkbox" id="menu<%= menu.seq %>" name="menu" value="<%= menu.seq %>">
                        <label class="form-check-label" for="menu<%= menu.seq %>"><%= menu.name %></label>
                    </div>
                <% }); %>
            <% } else { %>
                <p>메뉴가 없습니다.</p>
            <% } %>
        </div>
        <div class="form-group">
            <label for="type">접근대상</label>
            <select class="form-control" id="type" name="type" required onchange="showUserList()">
                <option value="">접근대상 선택</option>

                <option value="admin">관리자</option>
                <option value="user">유저</option>
            </select>
        </div>
        <div class="form-group" id="userTableContainer" style="display: none;">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th scope="col"><input type="checkbox" id="selectAllUsers"></th>
                        <th scope="col">번호</th>
                        <th scope="col">이름</th>
                        <th scope="col">이메일</th>
                    </tr>
                </thead>
                <tbody id="userTableBody">
                </tbody>
            </table>
        </div>
        <div class="form-group">
            <button type="submit" class="btn btn-primary">권한 생성</button>
            <a href="/authority" class="btn btn-secondary" style="margin-left: 10px;">취소</a>
        </div>
    </form>
</div>


